package ai.acyclic.prover.commons.collection

import scala.collection.mutable

object MapBackedSet {
  // generated by claude ops, not used yet

  class Mutable[A](underlying: mutable.Map[A, _ >: Unit]) extends mutable.Set[A] {

    override def contains(elem: A): Boolean = underlying.contains(elem)

    override def iterator: Iterator[A] = underlying.keysIterator

    override def addOne(elem: A): this.type = {
      underlying.put(elem, ())
      this
    }

    override def subtractOne(elem: A): this.type = {
      underlying.remove(elem)
      this
    }

    override def clear(): Unit = underlying.clear()

    override def size: Int = underlying.size
  }
}
